
1- Afficher toutes les recettes disponibles (nom de la recette, catégorie et temps de préparation) triées
de façon décroissante sur la durée de réalisation

SELECT * 
FROM RECETTE
ORDER BY TempPreparation DESC;


2- En modifiant la requête précédente, faites apparaître le nombre d’ingrédients nécessaire par recette.

SELECT RECETTE.Nom, RECETTE.Instructions, RECETTE.TempPreparation, INGREDIENTS.NomIngredient 
FROM RECETTE 
JOIN PREPARATION 
ON RECETTE.id_recette = PREPARATION.id_recette 
JOIN INGREDIENTS 
ON INGREDIENTS.id_ingredients = PREPARATION.id_ingredients;


3- Afficher les recettes qui nécessitent au moins 30 min de préparation

SELECT * 
FROM RECETTE
GROUP BY TempPreparation
HAVING min(TempPreparation) >= 30;


4- Afficher les recettes dont le nom contient le mot « Salade » (peu importe où est situé le mot en
question)

SELECT * 
FROM RECETTE
WHERE Nom LIKE '%Salade%';


5- Insérer une nouvelle recette : « Pâtes à la carbonara » dont la durée de réalisation est de 20 min avec
les instructions de votre choix. Pensez à alimenter votre base de données en conséquence afin de
pouvoir lister les détails de cette recettes (ingrédients)

INSERT INTO RECETTE (Nom, Instructions, TempPreparation) VALUES ("Pâtes à la carbonara", " disposez des feuilles par là etc...", 20);
INSERT INTO INGREDIENTS (NomIngredient, UniteMesure, Prix) VALUES 
	("- Tomates
	-Bananes
	-Pates
	-Orange	
	", "gr", 7);


6- Modifier le nom de la recette ayant comme identifiant id_recette = 3 (nom de la recette à votre
convenance)

UPDATE RECETTE SET Nom = "Crevette APP" WHERE id_recette=3;


7- Supprimer la recette n°2 de la base de données

DELETE FROM RECETTE
WHERE id_recette = 2;


8- Afficher le prix total de la recette n°5

SELECT RECETTE.id_recette, RECETTE.Nom, RECETTE.Instructions, RECETTE.TempPreparation, INGREDIENTS.Prix 
FROM RECETTE 
JOIN PREPARATION ON RECETTE.id_recette = PREPARATION.id_recette 
JOIN INGREDIENTS ON INGREDIENTS.id_ingredients = PREPARATION.id_ingredients 
WHERE RECETTE.id_recette = 5;


9- Afficher le détail de la recette n°5 (liste des ingrédients, quantités et prix)

SELECT RECETTE.id_recette, RECETTE.Nom, INGREDIENTS.NomIngredient ,PREPARATION.quantite ,INGREDIENTS.Prix 
FROM RECETTE 
JOIN PREPARATION ON RECETTE.id_recette = PREPARATION.id_recette 
JOIN INGREDIENTS ON INGREDIENTS.id_ingredients = PREPARATION.id_ingredients 
WHERE RECETTE.id_recette = 5;


10- Ajouter un ingrédient en base de données : Poivre, unité : cuillère à café, prix : 2.5 €

INSERT INTO INGREDIENTS (NomIngredient, UniteMesure, Prix) VALUES ('Poivre', 'cuillère à café', 2.5);


11- Modifier le prix de l’ingrédient n°12 (prix à votre convenance)

UPDATE table
SET nom_colonne_1 = 'nouvelle valeur'
WHERE condition

12- Afficher le nombre de recettes par catégories : X entrées, Y plats, Z desserts

SELECT CATEGORIE.NomCategorie, COUNT(RECETTE.id_recette) AS Nombre_Recettes
FROM CATEGORIE 
LEFT JOIN RECETTE ON CATEGORIE.id_categorie = RECETTE.id_categorie
GROUP BY CATEGORIE.id_categorie;


13- Afficher les recettes qui contiennent l’ingrédient « Poulet »

SELECT RECETTE.Nom, INGREDIENTS.NomIngredient, INGREDIENTS.Prix 
FROM RECETTE 
JOIN PREPARATION ON RECETTE.id_recette = PREPARATION.id_recette 
JOIN INGREDIENTS ON INGREDIENTS.id_ingredients = PREPARATION.id_ingredients 
WHERE LOWER(INGREDIENTS.NomIngredient) LIKE "%poulet%"; 


14- Mettez à jour toutes les recettes en diminuant leur temps de préparation de 5 minutes

UPDATE RECETTE
SET TempPreparation = TempPreparation - 5


15- Afficher les recettes qui ne nécessitent pas d’ingrédients coûtant plus de 2€ par unité de mesure

SELECT RECETTE.id_recette, RECETTE.Nom, INGREDIENTS.Prix 
FROM RECETTE 
JOIN PREPARATION ON RECETTE.id_recette = PREPARATION.id_recette 
JOIN INGREDIENTS ON INGREDIENTS.id_ingredients = PREPARATION.id_ingredients 
WHERE INGREDIENTS.Prix <= 2;


16- Afficher la / les recette(s) les plus rapides à préparer

SELECT Nom, TempPreparation
FROM RECETTE 
WHERE RECETTE.TempPreparation = (
    SELECT MIN(TempPreparation)
    FROM RECETTE
);


17- Trouver les recettes qui ne nécessitent aucun ingrédient (par exemple la recette de la tasse d’eau
chaude qui consiste à verser de l’eau chaude dans une tasse)

SELECT RECETTE.Nom 
FROM RECETTE 
WHERE RECETTE.id_recette NOT IN(
SELECT RECETTE.id_recette
FROM RECETTE 
JOIN PREPARATION ON RECETTE.id_recette = PREPARATION.id_recette 
JOIN INGREDIENTS ON INGREDIENTS.id_ingredients = PREPARATION.id_ingredients
);


18- Trouver les ingrédients qui sont utilisés dans au moins 3 recettes

SELECT INGREDIENTS.NomIngredient, COUNT(DISTINCT PREPARATION.id_recette) >= 3 AS NB_recette
FROM INGREDIENTS 
INNER JOIN PREPARATION ON INGREDIENTS.id_ingredients = PREPARATION.id_ingredients 
GROUP BY INGREDIENTS.id_ingredients 
HAVING NB_recette;


19- Ajouter un nouvel ingrédient à une recette spécifique

INSERT INTO PREPARATION (id_recette, id_ingredients, quantite) VALUES (7, 10, 112);


20- Bonus : Trouver la recette la plus coûteuse de la base de données (il peut y avoir des ex aequo, il est
donc exclu d’utiliser la clause LIMIT)

SELECT Nom, TempPreparation, MAX(INGREDIENTS.Prix) AS Prix_Recette
FROM RECETTE 
JOIN PREPARATION ON RECCETTE.id_recette = PREPARATION.id_recette
JOIN INGREDIENTS  ON PREPARATION.id_ingredients = INGREDIENTS.id_ingredients
GROUP BY RECETTE.id_recette
HAVING MAX(INGREDIENTS.Prix) = (
    SELECT MAX(Prix)
    FROM (
        SELECT MAX(INGREDIENTS.Prix) AS Prix
        FROM INGREDIENTS 
        JOIN PREPARATION ON INGREDIENTS.id_ingredients = PREPARATION.id_ingredients
        GROUP BY PREPARATION.id_recette
    ) AS Prix_Max
);




SELECT Nom, TempPreparation, SUM(INGREDIENTS.Prix * PREPARATION.quantite) AS Prix_Recette
FROM RECETTE 
INNER JOIN PREPARATION ON RECETTE.id_recette = PREPARATION.id_recette
INNER JOIN INGREDIENTS ON PREPARATION.id_ingredients = INGREDIENTS.id_ingredients
GROUP BY RECETTE.id_recette 
ORDER BY Prix_Recette DESC LIMIT 1;




SELECT Nom, TempPreparation, SUM(INGREDIENTS.Prix * PREPARATION.quantite) AS Prix_Recette
FROM RECETTE 
INNER JOIN PREPARATION ON RECETTE.id_recette = PREPARATION.id_recette
INNER JOIN INGREDIENTS  ON PREPARATION.id_ingredients = INGREDIENTS.id_ingredients
WHERE Prix_Recette > ALL ( 
    SELECT MAX(Prix_Recette) AS Prix_Recette1
    FROM RECETTE  
    INNER JOIN PREPARATION ON RECETTE.id_recette = PREPARATION.id_recette
	INNER JOIN INGREDIENTS ON PREPARATION.id_ingredients = INGREDIENTS.id_ingredients
    )   
GROUP BY Nom;









